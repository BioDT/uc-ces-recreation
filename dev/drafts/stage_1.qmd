# Stage 1 (Reprojected)

```{r include=FALSE}
library(dplyr)
library(terra)

devtools::load_all("../model")
source("production.R")

config <- load_config()
feature_mappings <- get_feature_mappings(config)

files <- get_files("data/Stage_1")

bush <- vect("data/Shapefiles/Bush/Bush.shp")
cairngorms <- vect("data/Legacy/Legacy_Data/input/Raw_Shapefile/CairngormNP/CairngormNP.shp")
stirlingshire <- vect("data/Legacy/Legacy_Data/input/Raw_Shapefile/Stirlingshire/Stirlingshire.shp")
scotland <- vect("data/Scotland/boundaries.shp")
```

## Properties of the Level 1 data

After reprojection, all layers have the same resolution, extent and origin.

```{r}
properties <- lapply(files, function(file_) {
    raster <- rast(file_)
    info <- c(
        # file_size = file.info(file_)$size,
        nlyr = nlyr(raster),
        res = res(raster),
        ext = as.vector(ext(raster)),
        origin = origin(raster)
    )
    return(info)
})
properties_df <- as.data.frame(
    do.call(rbind, properties), # creates matrix
    stringsAsFactor = FALSE
)
properties_df
```

## Scotland plots

Weird thing where if you plot too large an area using `plet`, it auto rescales and somehow messes things up - the data no longer sites on top of the base map correctly.

```{r}
layer <- "FIPS_N_Landform"
# layer <- "Water_Lakes"
files[[layer]] |>
    rast() |>
    plot() # et(type = "classes")
lines(scotland, col = "black", lwd = 1)

files[[layer]] |>
    rast() |>
    crop(stirlingshire) |>
    plet(type = "classes")

config |>
    filter(Dataset == layer) |>
    select(Name, Description, Raster_Val)
```

## Sanity check the layers


### FIPS_I

```{r}
layer <- "FIPS_I_LocalPathNetwork"
files[[layer]] |>
    rast() |>
    crop(bush) |>
    plet(type = "classes")
config |>
    filter(Dataset == layer) |>
    select(Name, Description, Raster_Val)
```

```{r}
layer <- "FIPS_I_RoadsTracks"
files[[layer]] |>
    rast() |>
    crop(bush) |>
    plet(type = "classes")
config |>
    filter(Dataset == layer) |>
    select(Name, Description, Raster_Val)
```

```{r}
layer <- "FIPS_I_NationalCycleNetwork"
files[[layer]] |>
    rast() |>
    crop(bush) |>
    plet(type = "classes")
config |>
    filter(Dataset == layer) |>
    select(Name, Description, Raster_Val)
```

### FIPS_N

NOTE: 2 corresponds to Lakes in the original data.

```{r}
layer <- "FIPS_N_Landform"
files[[layer]] |>
    rast() |>
    crop(bush) |>
    plet(type = "classes")
config |>
    filter(Dataset == layer) |>
    select(Name, Description, Raster_Val)
```

```{r}
layer <- "FIPS_N_Slope"
files[[layer]] |>
    rast() |>
    crop(bush) |>
    plet()
config |>
    filter(Dataset == layer) |>
    select(Name, Description, Raster_Val)
```

### Water

```{r}
layer <- "Water_Lakes"
files[[layer]] |>
    rast() |>
    crop(bush) |>
    plet(type = "classes")
config |>
    filter(Dataset == layer) |>
    select(Name, Description, Raster_Val)
```

```{r}
layer <- "Water_Rivers"
files[[layer]] |>
    rast() |>
    crop(bush) |>
    plet(type = "classes")
config |>
    filter(Dataset == layer) |>
    select(Name, Description, Raster_Val)
```

### SLSRA

```{r}
layer <- "SLSRA_LCM"
files[[layer]] |>
    rast() |>
    crop(bush) |>
    plet(type = "classes")
config |>
    filter(Dataset == layer) |>
    select(Name, Description, Raster_Val)
```

```{r}
layers <- c(
    "SLSRA_CP",
    "SLSRA_HNV",
    "SLSRA_NNR",
    "SLSRA_NP",
    "SLSRA_NR",
    "SLSRA_RP",
    "SLSRA_RSPB",
    "SLSRA_SAC",
    "SLSRA_SPA",
    "SLSRA_SSSI",
    "SLSRA_SWT",
    "SLSRA_WLA"
)
# NOTE: this produces an un-named list. files[[layers]] does not work
# since [[ ]] is only designed to extract single elements
# files_ <- unlist(files[layers], use.names = FALSE)
# layers <- lapply(files_, rast)

. <- lapply(layers, function(layer) {
    plot(rast(files[[layer]]), col = c("grey", "red"), main = layer)
    lines(scotland, col = "black", lwd = 1)
})

config |>
    filter((Component == "SLSRA") & (Dataset != "SLSRA_LCM")) |>
    select(Name, Description)
```
