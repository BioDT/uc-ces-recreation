```{r}
library(model)
library(terra)

crop_area <- terra::vect("../Data/input/Raw_Shapefile/Bush/Bush.shp")
persona <- persona <- sample(1:10, size = 87, replace = TRUE)
data_dir <- "../Data/input/Processed_Data/"
config_path <- "../model/inst/extdata/config.csv"
```

## Testing

```{r}
# Load global config
config <- load_config(config_path)

# Generate mappings { layer_name : { raster_value : persona_score } }
mappings <- get_score_mappings(config, persona)

r <- file.path(data_dir, "FIPS_I.tif") |>
    load_raster(crop_area)

terra::plot(r)

# NOTE: the data is still erroneously double-valued so round it here
r <- round(r)

print(is.integer(terra::values(r)))
print(any(is.na(terra::values(r))))
print(is.double(terra::values(r)))

r <- reclassify_raster(r, mappings)

terra::plot(r)

# NOTE: big issue is that we want to mask NA but not NaN
# The former is a 'missing' placeholder, the latter is a numerical error
# Should I just assert that there's no NaNs before applying sum?
r <- terra::ifel(is.na(r) & !is.nan(r), 0, r)
r <- terra::app(r, sum)

terra::plot(r)

 #   sum_layers() |>
 #   rescale_to_unit_interval()
```

## Running the model

```
model::compute_potential(crop_area, persona, data_dir, config_path)

```
