---
title: Create example csv containing HR and SR personas
format:
  html:
    embed-resources: true
---

```{r}
library(terra)
devtools::load_all("../model")
```

```{r}
# Load global config
config <- load_config()

head(config)
```

## Generate alphabetically-ordered config

```r
config <- config[order(config[["Name"]]), ]

readr::write_csv(config, "_config.csv")
```

This isn't necessary...

```r
rownames(config) <- config[["Name"]]

config[["Name"]] <- NULL
config[["Dataset"]] <- NULL
config[["Raster_Val"]] <- NULL
config[["Component"]] <- NULL

# Sort alphabetically for sanity
config <- config[order(rownames(config)), , drop = FALSE]

print(config)

readr::write_csv(config, "reference.csv")
```

## Generate random persona

```r
persona <- setNames(
    sample(0:10, size = 87, replace = TRUE),
    config[["Name"]]
)
  
head(persona)

expected_names <- load_config()[["Name"]]
identical(sort(names(persona)), sort(expected_names))

file.remove("test_persona.csv")
model::save_persona(persona, "test_persona.csv", "random")
```

## Test saving and loading a new persona file

```r
persona <- setNames(
    sample(0:10, size = 87, replace = TRUE),
    config[["Name"]]
)
persona


model::save_persona(persona, "test_persona.csv", "random")

loaded_persona <- model::load_persona("test_persona.csv")

identical(persona, loaded_persona)
```


```r
persona2 <- setNames(
    sample(0:10, size = 87, replace = TRUE),
    config[["Name"]]
)

save_persona(persona2, "test_persona.csv", "random2")
save_persona(persona2, "test_persona.csv", "random2")

loaded_persona <- load_persona("test_persona.csv", "random2")

loaded_persona

# file.remove("test_persona.csv")
```


## Generate SR and HR persona files

```{r}
load_legacy_config <- function(config_path = NULL) {
    if (is.null(config_path)) {
        config_path <- default_config
    }
    column_spec <- readr::cols(
        Component = readr::col_character(),
        Dataset = readr::col_character(),
        Name = readr::col_character(),
        Description = readr::col_character(),
        Raster_Val = readr::col_double(), # Note difference
        .default = readr::col_integer() # Note addition
    )
    loaded_config <- readr::read_csv(config_path, col_types = column_spec)

    return(loaded_config)
}
```

```{r}
hr_config <- load_legacy_config("../Data/input/Persona_Loaded/HR_ReducedMod.csv")
sr_config <- load_legacy_config("../Data/input/Persona_Loaded/SR_ReducedMod.csv")

# head(hr_config)

# Sort alphabetically for sanity
hr_config <- dplyr::arrange(hr_config, "Name")
sr_config <- dplyr::arrange(sr_config, "Name")

hr_persona <- setNames(hr_config[["HR_ReducedMod"]], hr_config[["Name"]])
sr_persona <- setNames(sr_config[["SR_ReducedMod"]], sr_config[["Name"]])

# hr_persona

model::save_persona(hr_persona, "examples.csv", "Hard_Recreationalist")
model::save_persona(sr_persona, "examples.csv", "Soft_Recreationalist")
```
