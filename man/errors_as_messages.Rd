% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{errors_as_messages}
\alias{errors_as_messages}
\title{Errors as Messages}
\usage{
errors_as_messages(func)
}
\arguments{
\item{func}{A function which can error out.}
}
\value{
The wrapped function.
}
\description{
Given a function that may throw an error, e.g. via \code{stop()}, produce
a function that instead prints the error message without crashing.
}
\details{
This is achieved by wrapping the function execution in a \code{tryCatch}
and capturing any errors or warnings as a message.

Note that in the case of an error being thrown, the function will
return the error. This can be checked by testing the return type, i.e.
\code{inherits(return_value$result, "simpleError")}, which will evaluate to
\code{TRUE} if an error was returned.
}
\keyword{internal}
